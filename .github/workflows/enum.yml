name: Enum

on:
  push:
  workflow_dispatch:

jobs:
  enum:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        id: set-result
        with:
          script: |
            const owner = "pwntester";
            const repo = "octo.nvim";

            // Requires admin perms
            //const permissions = github.rest.actions.getGithubActionsDefaultWorkflowPermissionsRepository({
            //  owner,
            //  repo,
            //});
            //console.log(permissions);

            const workflows = await github.rest.actions.listRepoWorkflows({
              owner,
              repo,
            });
            //console.log(workflows);

            if (workflows.data.workflows.total_count == 0) {
              console.log("No workflows found");
              return;
            }
            for (const workflow of workflows.data.workflows) {
              console.log("Workflow ID: " + workflow.id);
              const runs = await github.rest.actions.listWorkflowRuns({
                "owner": owner,
                "repo": repo,
                "workflow_id": workflow.id,
                "status": "success"
              });   
              //console.log(runs);
              if (runs.data.total_count > 0) {
                const last_run = runs.data.workflow_runs[0];
                //console.log(last_run);

                const run_id = last_run.id;
                console.log("Last Run ID: " + run_id);
                const jobs = await github.rest.actions.listJobsForWorkflowRun({
                  owner,
                  repo,
                  run_id,
                });
                console.log(jobs);
                if (jobs.data.total_count > 0) {
                  const first_job = jobs.data.jobs[0]; 
                  job_id = first_job.id;
                  console.log("Job ID: " + job_id);
                  console.log(first_job);
                }
              }
            }

            return "Hello!"
          result-encoding: string
      - name: Get result
        run: echo "${{steps.set-result.outputs.result}}"
